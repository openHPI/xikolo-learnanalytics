unless Lanalytics::Processing::DatasourceManager.datasource_exists?('exp_graph_schema_neo4j')
  raise "Datasource 'exp_graph_schema_neo4j' is not available. Check your 'config/datasources/experience_graph_schema_neo4j.yml' or 'lib/lanalytics/processing/datasources/Neo4jDatasource.'"
end

def create_nosql_pipeline(processing_action, service, domain)
  service = service.downcase
  domain  = domain.downcase
  pa      = processing_action.to_s.downcase

  pipeline_for("xikolo.#{service}.#{domain}.#{pa}", :nosql, processing_action) do
    datasource = Lanalytics::Processing::DatasourceManager.datasource('exp_graph_schema_neo4j')

    extractor Lanalytics::Processing::Extractor::AmqEventExtractor.new(domain)

    transformer Lanalytics::Processing::Transformer::AnonymousDataFilter.new
    transformer Lanalytics::Processing::Transformer::NosqlDataSchemaTransformer.new

    loader Lanalytics::Processing::Loader::Neo4jLoader.new(datasource)
  end
end

create_action = Lanalytics::Processing::Action::CREATE
update_action = Lanalytics::Processing::Action::UPDATE
destroy_action = Lanalytics::Processing::Action::DESTROY

# NoSQL Pipelines for 'CREATE', 'UPDATE' and 'DESTROY'
def create_nosql_pipelines_for_crud(service, domain)
  create_nosql_pipeline(create_action, service, domain)
  create_nosql_pipeline(update_action, service, domain)
  create_nosql_pipeline(destroy_action, service, domain)
end


# ------------------- Account Service -------------------
create_nosql_pipelines_for_crud(:account, :user)

# ------------------- Course Service -------------------
create_nosql_pipelines_for_crud(:course, :course)
create_nosql_pipelines_for_crud(:course, :item)
create_nosql_pipeline(create_action, :course, :enrollment)
create_nosql_pipeline(destroy_action, :course, :enrollment)
create_nosql_pipeline(create_action, :course, :visit)

# ------------------- Learning Room Service -------------------
create_nosql_pipelines_for_crud(:learning_room, :learning_room)
create_nosql_pipeline(create_action, :learning_room, :membership)
create_nosql_pipeline(destroy_action, :learning_room, :membership)

# ------------------- Submission Service -------------------
create_nosql_pipeline(create_action, :submission, :submission)

# ------------------- Pinboard Service -------------------
create_nosql_pipeline(create_action, :pinboard, :question)
create_nosql_pipeline(update_action, :pinboard, :question)
create_nosql_pipeline(create_action, :pinboard, :subscription)
create_nosql_pipeline(destroy_action, :pinboard, :subscription)
create_nosql_pipeline(create_action, :pinboard, :answer)
create_nosql_pipeline(update_action, :pinboard, :answer)
create_nosql_pipeline(create_action, :pinboard, :comment)
create_nosql_pipeline(update_action, :pinboard, :comment)

# ------------------- Helpdesk Service -------------------
create_nosql_pipeline(create_action, :helpdesk, :ticket)


# ------------------- Web Service -------------------
create_nosql_pipeline(create_action, :web, :exp_event)
